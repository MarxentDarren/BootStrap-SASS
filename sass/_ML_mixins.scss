//PARTIALS - NON-RENDERING CODE REFERENCED BY OTHER CSS
//Author DLarson
//Created 01/08/2014

//************************************************************
//functions
//************************************************************

//returns calculated percentage
@function calcPercent($target,$context)
{
	@return percentage($target / $context);
}


//************************************************************
//3rd Party mixins
//************************************************************

//Sparkbox mixin - https://github.com/sparkbox/SB-Media
$no-mq-support: false !default;
$serve-to-nomq-max-width: 1280;
//determines how to add in mq (min only)
@mixin sb-media($query, $useMaxWidth: "") 
{
	@if $no-mq-support{
		@if unquote($query) < $serve-to-nomq-max-width{ 
			@content;
		}
	} @else {
		@if $useMaxWidth == "" {	//check to see if max width exists
			@media ( 'min-width:' + $query ) {	//original line - changed to fit needs
			//@media ( $query ) {
				@content;
			}
		} @else {
			//use max-width 
			@media ( 'max-width:' + $query ) {	
				@content;
			}
		}
	}
}

//Original mixin from Sparkbox
//@mixin sb-media($query) {
// @if $no-mq-support{
//    @if $query < $serve-to-nomq-max-width{
//      @content;
//    }
//  } @else {
//    @media ( 'min-width:' + $query ) {
//      @content;
//    }
//  }
//}




//************************************************************
//standard mixins 
//************************************************************

//set border radius
@mixin border-radius($radius) 
{
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
       -o-border-radius: $radius;
          border-radius: $radius;
}

//set drop shadow
@mixin shadow($x, $y, $blur, $color)
{
	-webkit-box-shadow: $x $y $blur $color;
	   -moz-box-shadow: $x $y $blur $color;
	        box-shadow: $x $y $blur $color;
}

//set inner shadow
@mixin shadow-inset($x, $y, $blur, $color)
{
	-webkit-box-shadow: inset $x $y $blur $color;
	   -moz-box-shadow: inset $x $y $blur $color;
	        box-shadow: inset $x $y $blur $color;
}

//set transition
@mixin transition($property)
{
	-webkit-transition: $property .2s ease;
	   -moz-transition: $property .2s ease;
	     -o-transition: $property .2s ease;
	        transition: $property .2s ease;
}

//set box sizing
@mixin box-sizing
{
	-webkit-box-sizing: border-box;
	   -moz-box-sizing: border-box;
	        box-sizing: border-box;
}

//set linear gradient
@mixin linear-gradient($from, $to)
{
	background-color: $to;	/* fallback for old browsers */
	background-image: -moz-linear-gradient($from, $to); /* Firefox */
	background-image: -o-linear-gradient($from, $to); /* Opera */
	background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1,$to)); /* Chrome 11+ */
	background-image: -webkit-linear-gradient($from, $to); /* Safari 5.1+, Chrome 10+ */
	background-image: -ms-linear-gradient($from, $to); /* IE 10 */
	background-image: linear-gradient($from, $to); /* W3C */
}

//set transparency
@mixin opacity ( $value: 0.5 ) 
{
	opacity: $value;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" $value * 100 ")";
	filter: alpha(opacity= $value * 100 );
	zoom: 1;
}

//set opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

//hide text
@mixin hide-text 
{
	font: 0/0 a;
	text-shadow: none;
	color: transparent;
}


//retina image 
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}
